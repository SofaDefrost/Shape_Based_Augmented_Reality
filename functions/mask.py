#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri Jul 21 17:15:54 2023

@author: tinhinane
"""
import open3d as o3d
import numpy as np

def mask(point_cloud_name, filtered_cloud_name, threshold, color_phase):

    """
This function filters a point cloud based on a threshold value applied to either point colors or x, y, z coordinates.

:param point_cloud: The file name of the point cloud generated by the acquisition function.
:param output_file: The file name in which the point cloud will be saved after applying the mask.
:param threshold: The threshold to filter points based on color or coordinates.
:param color_phase: Select which color phase to preserve, either in the red channel (range [0-1]) and in column 0.
"""


    cloud = o3d.io.read_point_cloud(point_cloud_name)
    points = np.asarray(cloud.points)
    colors = np.asarray(cloud.colors)
    
    # Indices des canaux de couleur (rouge=0, vert=1, bleu=2)
    r = 0
    g = 1
    b = 2

    if color_phase == 'red':
        mask = colors[:, r] < threshold
    elif color_phase == 'green':
        mask = colors[:, g] < threshold
    elif color_phase == 'blue':
        mask = colors[:, b] < threshold
    else:
        raise ValueError("The selected color phase is not valid.")

    # Filtrage des points et des couleurs
    points = points[mask]
    colors = colors[mask]

    # Création d'un nouveau nuage de points avec les points filtrés
    filtered_cloud = o3d.geometry.PointCloud()
    filtered_cloud.points = o3d.utility.Vector3dVector(points)
    filtered_cloud.colors = o3d.utility.Vector3dVector(colors)

    # Sauvegarde du nuage de points filtré
    o3d.io.write_point_cloud(filtered_cloud_name, filtered_cloud)

    